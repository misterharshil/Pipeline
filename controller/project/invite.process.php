<?phprequire_once('./../../global.php');require_once TEMPLATE_PATH.'/site/helper/format.php'; // for formatCount// check project$slug = Filter::text($_GET['slug']);$project = Project::getProjectFromSlug($slug);if($project == null) {	$json = array('error' => 'That project does not exist.');	exit(json_encode($json));	}$invitees = Filter::text($_POST['invitees']);$message = Filter::formattedText($_POST['message']);$trusted = Filter::numeric($_POST['trusted']);$invitees = explode(',', $invitees);// these arrays will hold valid users and emails to invite$users = array();$emails = array();// first, make sure everyone in the list is validif(!empty($invitees)) {	foreach($invitees as $i) {		$i = trim($i);		if($i == '') continue; // skip blank		if(filter_var($i, FILTER_VALIDATE_EMAIL)) {			// it's an email address			$user = User::loadByEmail($i);			if($user !== null) {				// user already registered with this email				if($project->isCreator($user->getID())) {					$json = array('error' => $user->getUsername().' ('.$i.') is the creator of this project.');					exit(json_encode($json));										} elseif($project->isTrusted($user->getID())) {					$json = array('error' => $user->getUsername().' ('.$i.') is already a trusted member of this project.');					exit(json_encode($json));						} elseif($project->isMember($user->getID())) {					$json = array('error' => $user->getUsername().' ('.$i.') is already a member of this project.');					exit(json_encode($json));										} else {					// add user to array					$users[] = $user;				}							} else {				// email address not found				$emails[] = $i;			}		} else {			// it's a username			$user = User::loadByUsername($i);			if($user !== null) {				// user found				if($project->isCreator($user->getID())) {					$json = array('error' => $user->getUsername().' ('.$i.') is the creator of this project.');					exit(json_encode($json));										} elseif($project->isTrusted($user->getID())) {					$json = array('error' => $user->getUsername().' ('.$i.') is already a trusted member of this project.');					exit(json_encode($json));						} elseif($project->isMember($user->getID())) {					$json = array('error' => $user->getUsername().' ('.$i.') is already a member of this project.');					exit(json_encode($json));					} else {					// add user to array					$users[] = $user;				}			} else {				// invalid user				$json = array('error' => '"'.$i.'" is not a valid username or email address.');				exit(json_encode($json));								}		}	}} else {	$json = array('error' => 'You must provide at least one username or email address.');	exit(json_encode($json));		}// now actually invite the validated users/emailsforeach($users as $u) {	// send invitation	$invite = new Invitation(array(		'inviter_id' => Session::getUserID(),		'invitee_id' => $u->getID(),		'project_id' => $project->getID(),		'trusted' => $trusted,		'invitation_message' => $message	));	$invite->save();		// log event	$logEvent = new Event(array(		'event_type_id' => 'invite_member_user',		'project_id' => $project->getID(),		'user_1_id' => Session::getUserID(),		'user_2_id' => $u->getID(),		'item_1_id' => $invite->getID(),		'data_1' => $message,		'data_2' => $trusted	));	$logEvent->save();		// send notification email, if enabled	$sendEmail = false;	if($u->getID() != Session::getUserID()) { // don't email yourself				if($u->getNotifyInviteProject()) { // follower member enabled			$sendEmail = true;		}	}		if($sendEmail) {		// compose email		$body = "<p>".formatUserLink(Session::getUserID()).' invited you to join the project '.formatProjectLink($project->getID()).'.</p>';		if(!empty($message)) {			$body .= '<blockquote>'.formatInvitationMessage($message).'</blockquote>';		}		if($trusted) {			$body .= '<p>If you accept this invitation, you will become a <a href="'.Url::help().'">trusted member</a> of this project.</p>';		}					$body .= '<p>To respond to this invitation, log into '.PIPELINE_NAME.' and visit your <a href="'.Url::dashboard().'">dashboard</a>.</p>';		$email = array(			'to' => $u->getEmail(),			'subject' => '['.PIPELINE_NAME.'] Invitation to join the project '.$project->getTitle(),			'message' => $body		);		// send email		Email::send($email);			}}foreach($emails as $e) {	// generate code//		$code = sha1(microtime(true).mt_rand(10000,90000));	// send invitation	$invite = new Invitation(array(		'inviter_id' => Session::getUserID(),		'invitee_email' => $e,		'project_id' => $project->getID(),					'trusted' => $trusted,		'invitation_message' => $message	));	$invite->save();		// log event	$logEvent = new Event(array(		'event_type_id' => 'invite_member_email',		'project_id' => $project->getID(),		'user_1_id' => Session::getUserID(),		'item_1_id' => $invite->getID(),		'data_1' => $e,		'data_2' => $message,		'data_3' => $trusted	));	$logEvent->save();				// compose email	$body = "<p>".formatUserLink(Session::getUserID()).' invited you to join the project '.formatProjectLink($project->getID()).'.</p>';	if(!empty($message)) {		$body .= '<blockquote>'.formatInvitationMessage($message).'</blockquote>';	}	if($trusted) {		$body .= '<p>If you accept this invitation, you will become a <a href="'.Url::help().'">trusted member</a> of this project.</p>';	}			$body .= '<p>To respond to this invitation, <a href="'.Url::consent($e).'">register</a> a free account on '.PIPELINE_NAME.' using this email address ('.$e.').</p>';	$email = array(		'to' => $e,		'subject' => '['.PIPELINE_NAME.'] Invitation to join the project '.$project->getTitle(),		'message' => $body	);	// send email	Email::send($email);}// send us back$numInvitations = count($users) + count($emails);Session::setMessage(formatCount($numInvitations,'invitation','invitations').' sent.');$json = array('success' => '1', 'successUrl' => Url::details($project->getID()));echo json_encode($json);