<?phprequire_once TEMPLATE_PATH.'/site/helper/format.php';$uploads = $SOUP->get('uploads');$showParent = $SOUP->get('showParent', false);?><script type="text/javascript" src="<?= Url::scripts() ?>/flowplayer-3.2.6.min.js"></script><script type="text/javascript" src="<?= Url::base() ?>/lib/swfobject/swfobject.js"></script><script type="text/javascript">$(document).ready(function(){	// set up dialog for flowplayer	$('#flowplayer').dialog({		modal: true,		autoOpen: false,		resizable: false,		position: 'center',		height: 400,		width: 550	});		// handler for video, audio uploads	$('div.video a.thumb.preview, div.audio a.thumb.preview').click(function(){		$('#flowplayer').empty();		var url = $(this).attr('href');		var title = $(this).attr('title');		$('#flowplayer').dialog({ title: title });		$('#flowplayer').dialog('open');		flowplayer(			"flowplayer",			"<?= Url::base() ?>/lib/flowplayer/flowplayer-3.2.7.swf", {				clip: {					url: url,					scaling: 'fit',					onFinish: function() {						this.getPlugin("play").hide();					}				}		});		return false;	});		// set up dialog for swfobject	$('#flashviewer').dialog({		modal: true,		autoOpen: false,		resizable: false,		position: 'center'	});		// handler for flash uploads	$('div.flash a.thumb.preview').click(function(){		$('#flashviewer').empty();		var url = $(this).attr('href');		var title = $(this).attr('title');		var img = $(this).find('img.preview');		var height = $(img).attr('height');		var width = $(img).attr('width');		$('#flashviewer').dialog({			title: title,			height: height,			width: width		});		$('#flashviewer').dialog('open');		swfobject.embedSWF(			url,			"flashviewer",			width,			height,			"9",			'<?= Url::base() ?>/lib/swfobject/swfobject.js'		);		return false;	});		// set up dialog for images	$('#imageviewer').dialog({		modal: true,		autoOpen: false,		resizable: false,		position: 'center',		height: 'auto',		width: 'auto'	});		// images don't use flowplayer, just a standard dialog		$('div.image a.thumb.preview').click(function(){		$('#imageviewer').empty();		var img = $(this).parent('div.upload').find('img.preview');		$(img).clone().css('display','block').appendTo('#imageviewer');		var title = $(this).attr('title');		$('#imageviewer').dialog({ title: title });		$('#imageviewer').dialog('open');		return false;	});		// non-thumbnail 'Preview' link	$('div.upload p.secondary a.preview').click(function(){		$(this).parent().parent().find('a.thumb.preview').click();		return false;	});});</script><div id="flowplayer" style="overflow: hidden;"></div><div id="imageviewer" style="overflow: hidden;"></div><div id="flashviewer"></div><?phpfunction getUploadCssClass($ext) {	$className = '';	switch($ext) {		case 'jpg':		case 'jpeg':		case 'png':		case 'gif':			$className = 'image';			break;		case 'mp3': 			$className = 'audio';			break;		case 'fla':		case 'swf':		case 'flv':			$className = 'flash';			break;		case 'mpeg':		case 'mp4':                case '3gp':                case 'mpg':		case 'mov':		case 'avi':                        $className = 'video';			break;		case 'psd':			$className = 'photoshop';			break;		case 'pdf':			$className = ' pdf';			break;		case 'doc':		case 'docx':			$className = 'msword';			break;	}	if($className != '')		$className = ' '.$className;	return ($className);}/* get scale factor for resizing images */function getScale($width, $height, $maxSize=600) {	$scale = min(		$maxSize / $width,		$maxSize / $height	);	if ($scale > 1) {		$scale = 1;	}	return ($scale);}if(!empty($uploads)) {	echo '<div class="line"> </div>';	echo '<ul class="segmented-list">';	foreach($uploads as $u) {		$thumbURL = $u->getThumbURL();		$previewURL = $u->getPreviewURL();		$downloadURL = $u->getDownloadURL();		$className = getUploadCssClass($u->getExtension());		$width = $u->getWidth();		$height = $u->getHeight();		if( !empty($width) && !empty($height) ) {			$thumbScale = getScale($width, $height, 150);			$thumbHeight = ceil($height*$thumbScale);			$thumbWidth = ceil($width*$thumbScale);			$thumbWidth = 150;						$previewScale = getScale($width, $height, 500);			$previewHeight = ceil($height*$previewScale);			$previewWidth = ceil($width*$previewScale);		} elseif($className == ' video') {			$thumbHeight = 100; // default			$thumbWidth = 150; // default			$previewHeight = 400;			$previewWidth = 550;		} else {			// unknown width/height			$thumbHeight = 50; // default			$thumbWidth = 150; // default		}				echo '<li>';			echo '<div class="upload'.$className.'">';			if(!empty($previewURL)) {				// create thumbnail				echo '<a class="thumb preview" href="'.$previewURL.'" style="height:'.$thumbHeight.'px; width:'.$thumbWidth.'px; background-image: url('.$thumbURL.');" title="'.$u->getOriginalName().'">';				if( ($className == ' image') || ($className == ' flash') ) {					echo '<img class="preview" src="'.$previewURL.'" height="'.$previewHeight.'" width="'.$previewWidth.'" style="display: none;" alt="'.$u->getOriginalName().'" />';				}				if( ($className == ' video') || ($className == ' audio') || ($className == ' flash') ) {					// show play button					$playImgSize = 30;					$topMargin = ceil($thumbHeight/2) - ceil($playImgSize/2);					$leftMargin = ceil($thumbWidth/2) - ceil($playImgSize/2);					echo '<img src="'.Url::images().'/play_large.png" alt="Preview" height="'.$playImgSize.'" width="'.$playImgSize.'" style="margin: '.$topMargin.'px 0 0 '.$leftMargin.'px;" />';				}				echo '</a>';			}			// file name			echo '<h6 class="primary"><a href="'.$downloadURL.'">'.truncateFileName($u->getOriginalName()).'</a></h6>';			// show parent			if($showParent) {				if($u->getItemType() == Upload::TYPE_TASK) {					$task = Task::load($u->getItemID());					echo '<p class="secondary">in the task <a href="'.Url::task($task->getID()).'">'.$task->getTitle().'</a></p>';				} elseif($u->getItemType() == Upload::TYPE_UPDATE) {					$update = Update::load($u->getItemID());					echo '<p class="secondary">in the contribution <a href="'.Url::update($update->getID()).'">'.$update->getTitle().'</a></p>';						}			}			// uploaded date			echo '<p class="secondary">uploaded '.formatTimeTag($u->getDateCreated()).' by '.formatUserLink($u->getCreatorID()).'</p>';			// preview/download links			echo '<p class="secondary">';			if(!empty($previewURL)) {				echo '<a class="preview" href="'.$previewURL.'" title="'.$u->getOriginalName().'">Preview</a> <span class="slash">/</span>';			}			echo '<a href="'.$downloadURL.'">Download</a> ('.formatFileSize($u->getSize()).')</p>';			echo '</div>';		echo '</li>';	}	echo '</ul>';}